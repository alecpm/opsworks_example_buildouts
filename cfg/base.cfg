[buildout]
parts +=
    tmp

unzip = true
extends_cache = extends
download-cache = ${buildout:directory}/downloads

extensions =
    buildout.dumppickedversions

#dump-picked-versions-file = versions.cfg
overwrite-picked-versions-file = false

# Change the number here to change the version of Plone being used
extends = 
    http://dist.plone.org/release/4.3-latest/versions.cfg
    versions.cfg
versions = versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.3-latest/
    http://dist.plone.org/thirdparty

include-site-packages = false
exec-sitecustomize = false

eggs +=
    Plone
    plone.app.upgrade
    elementtree
# Add additional eggs here
#   alm.solrindex

[tmp]
recipe = z3c.recipe.mkdir
paths = var/tmp

[redis]
recipe = hexagonit.recipe.cmmi
url = http://download.redis.io/releases/redis-2.8.3.tar.gz
configure-command = :
make-options = PREFIX=${buildout:directory}

[celery]
recipe = collective.recipe.celery
broker-transport = redis
broker-host = 127.0.0.1
broker-port = 6379
result-backend = redis
result-dburi = redis://${celery:broker-host}:${celery:broker-port}
eggs =
    flower
imports =
    # Celery task imports here
additional-config =
    # Only store result when it's an error
    CELERY_IGNORE_RESULT = True
    CELERY_STORE_ERRORS_EVEN_IF_IGNORED = True
    CELERY_SEND_TASK_ERROR_EMAILS = True
    ADMINS = (
        ('Your Name', 'you@example.com'),
    )
    from celery.schedules import crontab
    CELERYBEAT_SCHEDULE = {
        # Celery beat scheduled tasks here
    }

[solr-host]
host = 127.0.0.1
port = 8988

[solr-download]
recipe = hexagonit.recipe.download
url = http://archive.apache.org/dist/lucene/solr/4.4.0/solr-4.4.0.zip
strip-top-level-dir = true
ignore-existing = true
excludes =
  apache-solr-*/contrib/*
  apache-solr-*/docs/*

[solr-instance]
recipe = collective.recipe.solrinstance
solr-location = ${solr-download:location}
host = ${solr-host:host}
port = ${solr-host:port}
basepath = /solr
max-num-results = 1000000
default-search-field = SearchableText
unique-key = docid
index =
    name:docid          type:integer stored:true  required:true
    name:SearchableText type:text    stored:false
    name:Title          type:text    stored:true
    name:Description    type:text    stored:true

[client1]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
zeo-client = on
zeo-address = ${zeoserver:zeo-address}
zeo-client-cache-size = 250
user = admin:admin
http-address = 8081
blob-storage = ${buildout:directory}/var/blobstorage
shared-blob = on
debug-mode = off
user = admin:admin
http-address = 8081
environment-vars =
    zope_i18n_compiled_mo_files true
    TZ US/Pacific
    TMP ${tmp:paths}
    TEMP ${tmp:paths}
    TMPDIR ${tmp:paths}
    SOLR_URI http://${solr-host:host}:${solr-host:port}/solr

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = Plone my.package
eggs =
    ${buildout:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = 8001
# We include all the eggs in case there is custom conflict management code
eggs =
    Plone
    ${buildout:eggs}

[backup]
recipe = collective.recipe.backup

[backupcronjob]
recipe = z3c.recipe.usercrontab
times = 0 21 * * *
command = ${buildout:directory}/bin/backup

[packcronjob]
recipe = z3c.recipe.usercrontab
times = 0 1 * * 7
command = ${buildout:directory}/bin/zeopack
